{"swagger": "2.0", "info": {"title": "Sunflower API", "description": "", "version": ""}, "paths": {"/api/v1/comments/{comment_id}": {"get": {"operationId": "comments_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "comment_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows comment to be viewed or edited.\nGET comments/:id\nPUT comments/:id\nDELETE comments/:id", "summary": "API endpoint that allows comment to be viewed or edited.", "tags": ["comments"]}, "put": {"operationId": "comments_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "comment_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows comment to be viewed or edited.\nGET comments/:id\nPUT comments/:id\nDELETE comments/:id", "summary": "API endpoint that allows comment to be viewed or edited.", "tags": ["comments"]}, "delete": {"operationId": "comments_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "comment_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows comment to be viewed or edited.\nGET comments/:id\nPUT comments/:id\nDELETE comments/:id", "summary": "API endpoint that allows comment to be viewed or edited.", "tags": ["comments"]}}, "/api/v1/cookbooks/": {"get": {"operationId": "cookbooks_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows all cookbook to be viewed and\nto add new recipe.\nGET cookbooks/\nPOST cookbooks/", "summary": "API endpoint that allows all cookbook to be viewed and", "tags": ["cookbooks"]}, "post": {"operationId": "cookbooks_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"name": {"description": "", "type": "string"}, "author": {"description": "", "type": "object"}}, "required": ["name"]}}], "description": "API endpoint that allows all cookbook to be viewed and\nto add new recipe.\nGET cookbooks/\nPOST cookbooks/", "summary": "API endpoint that allows all cookbook to be viewed and", "consumes": ["application/json"], "tags": ["cookbooks"]}}, "/api/v1/cookbooks/{cookbook_id}": {"get": {"operationId": "cookbooks_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET cookbooks/:id\nPUT cookbooks/:id\nDELETE cookbook/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["cookbooks"]}, "put": {"operationId": "cookbooks_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET cookbooks/:id\nPUT cookbooks/:id\nDELETE cookbook/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["cookbooks"]}, "delete": {"operationId": "cookbooks_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET cookbooks/:id\nPUT cookbooks/:id\nDELETE cookbook/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["cookbooks"]}}, "/api/v1/cookbooks/{cookbook_id}/recipes": {"get": {"operationId": "cookbooks_recipes_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows cookbook recipes to be viewed and\nto add new recipe to cookbook.\nGET cookbooks/:id/recipes/\nPOST cookbooks/:id/recipes/", "summary": "API endpoint that allows cookbook recipes to be viewed and", "tags": ["cookbooks"]}, "post": {"operationId": "cookbooks_recipes_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"recipe_id": {"description": "", "type": "integer"}, "title": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "photo": {"description": "", "type": "string"}, "publish_date": {"description": "", "type": "string"}, "cooking_time": {"description": "in minutes", "type": "integer"}, "dish_weight": {"description": "", "type": "number"}, "author": {"description": "", "type": "object"}}, "required": ["recipe_id", "title", "publish_date"]}}], "description": "API endpoint that allows cookbook recipes to be viewed and\nto add new recipe to cookbook.\nGET cookbooks/:id/recipes/\nPOST cookbooks/:id/recipes/", "summary": "API endpoint that allows cookbook recipes to be viewed and", "consumes": ["application/json"], "tags": ["cookbooks"]}}, "/api/v1/cookbooks/{cookbook_id}/recipes/{recipe_id}": {"delete": {"operationId": "cookbooks_recipes_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "cookbook_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe tag to delete tag from recipe.\nDELETE cookbooks/:id/recipes/:id", "summary": "API endpoint that allows recipe tag to delete tag from recipe.", "tags": ["cookbooks"]}}, "/api/v1/docs/": {"get": {"operationId": "docs_list", "responses": {"200": {"description": ""}}, "parameters": [], "tags": ["docs"]}}, "/api/v1/ingredients/{ingredient_id}": {"get": {"operationId": "ingredients_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "ingredient_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe ingredient to be viewed or edited.\nGET ingredients/:id\nPUT ingredients/:id\nDELETE ingredients/:id", "summary": "API endpoint that allows recipe ingredient to be viewed or edited.", "tags": ["ingredients"]}, "put": {"operationId": "ingredients_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "ingredient_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe ingredient to be viewed or edited.\nGET ingredients/:id\nPUT ingredients/:id\nDELETE ingredients/:id", "summary": "API endpoint that allows recipe ingredient to be viewed or edited.", "tags": ["ingredients"]}, "delete": {"operationId": "ingredients_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "ingredient_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe ingredient to be viewed or edited.\nGET ingredients/:id\nPUT ingredients/:id\nDELETE ingredients/:id", "summary": "API endpoint that allows recipe ingredient to be viewed or edited.", "tags": ["ingredients"]}}, "/api/v1/login/": {"post": {"operationId": "login_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"username": {"description": "", "type": "string"}, "email": {"description": "", "type": "string"}, "password": {"description": "", "type": "string"}}, "required": ["password"]}}], "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.", "summary": "Check the credentials and return the REST Token", "consumes": ["application/json"], "tags": ["login"]}}, "/api/v1/logout/": {"get": {"operationId": "logout_list", "responses": {"200": {"description": ""}}, "parameters": [], "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.", "summary": "Calls Django logout method and delete the Token object", "tags": ["logout"]}, "post": {"operationId": "logout_create", "responses": {"201": {"description": ""}}, "parameters": [], "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.", "summary": "Calls Django logout method and delete the Token object", "tags": ["logout"]}}, "/api/v1/password/change/": {"post": {"operationId": "password_change_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"new_password1": {"description": "", "type": "string"}, "new_password2": {"description": "", "type": "string"}}, "required": ["new_password1", "new_password2"]}}], "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.", "summary": "Calls Django Auth SetPasswordForm save method.", "consumes": ["application/json"], "tags": ["password"]}}, "/api/v1/password/reset/": {"post": {"operationId": "password_reset_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"email": {"description": "", "type": "string"}}, "required": ["email"]}}], "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.", "summary": "Calls Django Auth PasswordResetForm save method.", "consumes": ["application/json"], "tags": ["password"]}}, "/api/v1/password/reset/confirm/": {"post": {"operationId": "password_reset_confirm_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"new_password1": {"description": "", "type": "string"}, "new_password2": {"description": "", "type": "string"}, "uid": {"description": "", "type": "string"}, "token": {"description": "", "type": "string"}}, "required": ["new_password1", "new_password2", "uid", "token"]}}], "description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.", "summary": "Password reset e-mail link is confirmed, therefore", "consumes": ["application/json"], "tags": ["password"]}}, "/api/v1/recipes/": {"get": {"operationId": "recipes_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows all recipe to be viewed and\nto add new recipe.\nGET recipes/\nPOST recipes/", "summary": "API endpoint that allows all recipe to be viewed and", "tags": ["recipes"]}, "post": {"operationId": "recipes_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"recipe_id": {"description": "", "type": "integer"}, "title": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "photo": {"description": "", "type": "string"}, "publish_date": {"description": "", "type": "string"}, "cooking_time": {"description": "in minutes", "type": "integer"}, "dish_weight": {"description": "", "type": "number"}, "author": {"description": "", "type": "object"}}, "required": ["recipe_id", "title", "publish_date"]}}], "description": "API endpoint that allows all recipe to be viewed and\nto add new recipe.\nGET recipes/\nPOST recipes/", "summary": "API endpoint that allows all recipe to be viewed and", "consumes": ["application/json"], "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}": {"get": {"operationId": "recipes_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET recipes/:id\nPUT recipes/:id\nDELETE recipes/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["recipes"]}, "put": {"operationId": "recipes_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET recipes/:id\nPUT recipes/:id\nDELETE recipes/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["recipes"]}, "delete": {"operationId": "recipes_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe to be viewed or edited.\nGET recipes/:id\nPUT recipes/:id\nDELETE recipes/:id", "summary": "API endpoint that allows recipe to be viewed or edited.", "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}/comments": {"get": {"operationId": "recipes_comments_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows all recipe comments to be viewed and\nto add new comment to recipe.\nGET recipes/:id/comments/\nPOST recipes/:id/comments/", "summary": "API endpoint that allows all recipe comments to be viewed and", "tags": ["recipes"]}, "post": {"operationId": "recipes_comments_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"comment_id": {"description": "", "type": "integer"}, "content": {"description": "", "type": "string"}, "photo": {"description": "", "type": "string"}, "author": {"description": "", "type": "object"}, "recipe": {"description": "", "type": "integer"}}, "required": ["content", "recipe"]}}], "description": "API endpoint that allows all recipe comments to be viewed and\nto add new comment to recipe.\nGET recipes/:id/comments/\nPOST recipes/:id/comments/", "summary": "API endpoint that allows all recipe comments to be viewed and", "consumes": ["application/json"], "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}/ingredients": {"get": {"operationId": "recipes_ingredients_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows all ingredients to be viewed and to\nadd new ingredient to recipe.\nGET recipes/:id/ingredients/\nPOST recipes/:id/ingredients/", "summary": "API endpoint that allows all ingredients to be viewed and to", "tags": ["recipes"]}, "post": {"operationId": "recipes_ingredients_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "data", "in": "body", "schema": {"type": "object", "properties": {"ingredient_id": {"description": "", "type": "integer"}, "quantity": {"description": "", "type": "number"}, "weight_measure": {"description": "", "type": "string"}, "product": {"description": "", "type": "string"}}}}], "description": "API endpoint that allows all ingredients to be viewed and to\nadd new ingredient to recipe.\nGET recipes/:id/ingredients/\nPOST recipes/:id/ingredients/", "summary": "API endpoint that allows all ingredients to be viewed and to", "consumes": ["application/json"], "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}/steps": {"get": {"operationId": "recipes_steps_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows all recipe steps to be viewed and\nto add new step to recipe.\nGET recipes/:id/steps/\nPOST recipes/:id/steps/", "summary": "API endpoint that allows all recipe steps to be viewed and", "tags": ["recipes"]}, "post": {"operationId": "recipes_steps_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows all recipe steps to be viewed and\nto add new step to recipe.\nGET recipes/:id/steps/\nPOST recipes/:id/steps/", "summary": "API endpoint that allows all recipe steps to be viewed and", "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}/tags": {"post": {"operationId": "recipes_tags_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows all recipe tags to add new tag to recipe.\nPOST recipes/:id/tags/", "summary": "API endpoint that allows all recipe tags to add new tag to recipe.", "tags": ["recipes"]}}, "/api/v1/recipes/{recipe_id}/tags/{tag_id}": {"delete": {"operationId": "recipes_tags_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "tag_id", "required": true, "in": "path", "description": "", "type": "string"}, {"name": "recipe_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe tag to delete tag from recipe.\nDELETE recipes/:id/tags/:id", "summary": "API endpoint that allows recipe tag to delete tag from recipe.", "tags": ["recipes"]}}, "/api/v1/registration/": {"post": {"operationId": "registration_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"username": {"description": "", "type": "string"}, "email": {"description": "", "type": "string"}, "password1": {"description": "", "type": "string"}, "password2": {"description": "", "type": "string"}}, "required": ["username", "password1", "password2"]}}], "consumes": ["application/json"], "tags": ["registration"]}}, "/api/v1/registration/verify-email/": {"post": {"operationId": "registration_verify-email_create", "responses": {"201": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"key": {"description": "", "type": "string"}}, "required": ["key"]}}], "consumes": ["application/json"], "tags": ["registration"]}}, "/api/v1/steps/{recipe_step_id}": {"get": {"operationId": "steps_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_step_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe step to be viewed or edited.\nGET steps/:id\nPUT steps/:id\nDELETE steps/:id", "summary": "API endpoint that allows recipe step to be viewed or edited.", "tags": ["steps"]}, "put": {"operationId": "steps_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "recipe_step_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe step to be viewed or edited.\nGET steps/:id\nPUT steps/:id\nDELETE steps/:id", "summary": "API endpoint that allows recipe step to be viewed or edited.", "tags": ["steps"]}, "delete": {"operationId": "steps_delete", "responses": {"204": {"description": ""}}, "parameters": [{"name": "recipe_step_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows recipe step to be viewed or edited.\nGET steps/:id\nPUT steps/:id\nDELETE steps/:id", "summary": "API endpoint that allows recipe step to be viewed or edited.", "tags": ["steps"]}}, "/api/v1/tags/": {"get": {"operationId": "tags_list", "responses": {"200": {"description": ""}}, "parameters": [{"name": "page", "required": false, "in": "query", "description": "A page number within the paginated result set.", "type": "integer"}], "description": "API endpoint that allows all tags to be viewed.\nGET tags/\nGET tags/?recipe_id=<value>", "summary": "API endpoint that allows all tags to be viewed.", "tags": ["tags"]}}, "/api/v1/tags/{tag_id}": {"get": {"operationId": "tags_read", "responses": {"200": {"description": ""}}, "parameters": [{"name": "tag_id", "required": true, "in": "path", "description": "", "type": "string"}], "description": "API endpoint that allows tag to be viewed.\nGET tags/:id/", "summary": "API endpoint that allows tag to be viewed.", "tags": ["tags"]}}, "/api/v1/user/": {"get": {"operationId": "user_read", "responses": {"200": {"description": ""}}, "parameters": [], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "summary": "Reads and updates UserModel fields", "tags": ["user"]}, "put": {"operationId": "user_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"username": {"description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string"}, "first_name": {"description": "", "type": "string"}, "last_name": {"description": "", "type": "string"}}, "required": ["username"]}}], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "summary": "Reads and updates UserModel fields", "consumes": ["application/json"], "tags": ["user"]}, "patch": {"operationId": "user_partial_update", "responses": {"200": {"description": ""}}, "parameters": [{"name": "data", "in": "body", "schema": {"type": "object", "properties": {"username": {"description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string"}, "first_name": {"description": "", "type": "string"}, "last_name": {"description": "", "type": "string"}}}}], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.", "summary": "Reads and updates UserModel fields", "consumes": ["application/json"], "tags": ["user"]}}}, "securityDefinitions": {"basic": {"type": "basic"}}}